@model MongoMVC.Models.EmployeeListDTO
@using MongoMVC.Models;
@using System.Collections.Generic;

@{
    ViewBag.Title = "Edit";
    List<SelectListItem> listItems = new List<SelectListItem>();
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.HiddenFor(x => x._id, new { id = "_id" })
        <h4>Edit Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeCode, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Model.Managers != null &&
             Model.Managers.Count() > 0)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ManagerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @foreach (Manager obj in Model.Managers)
                    {
                        listItems.Add(new SelectListItem
                        {
                            Text = obj.ManagerName,
                            Value = obj.ManagerId.ToString(),
                            Selected = Model.Manager.ManagerId == obj.ManagerId ? true : false
                        });
                    }

                    @Html.DropDownListFor(model => model.ManagerId, listItems, "-- Select Manager Id --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ManagerId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Get")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
